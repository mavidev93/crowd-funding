{"version":3,"sources":["components/FundModal/FundModal.tsx","features/SingleCampaign/SingleCampaign.tsx","pages/SingleCampaignPage.tsx","constants/statics.ts","helpers/helpers.ts","components/CommonButton/CommonButton.tsx","components/CommonTitle/CommonTitle.tsx","hooks/useContract.tsx","components/ConnectPlease/ConnectPlease.tsx","helpers/web3Helpers.ts"],"names":["style","position","top","left","transform","width","display","flexDirection","justifyContent","alignItems","bgcolor","boxShadow","p","BootstrapInput","styled","InputBase","theme","marginTop","spacing","borderRadius","backgroundColor","palette","mode","border","fontSize","padding","transition","transitions","create","alpha","primary","main","borderColor","FundModal","campaignHash","isCampaignOpen","React","useState","open","setOpen","fundVal","setFundVal","isLoading","setIsLoading","dispatchNotification","useNotification","useMoralis","Moralis","chainIdHex","chainId","addresses","contractAddresses","parseInt","toString","crowdFundAddress","fundCampaign","useWeb3Contract","abi","contractAddress","functionName","runContractFunction","handleFund","e","onSuccess","tx","getRecept","status","message","type","onError","error","params","msgValue","Units","ETH","hash","CommonButton","text","variant","className","disabled","onClick","Modal","onClose","Box","sx","Typography","id","component","textAlign","FormControl","dispay","InputLabel","shrink","htmlFor","value","onChange","event","currentTarget","inputProps","color","CircularProgress","SingleCampaign","campaign","setCampaign","setError","isWeb3Enabled","contractData","useContract","getCampaignByHash","undefined","useLocation","state","handleSuccess","txCampaign","getReadableCampaign","useEffect","getCampaign","headerImgPath","outline","outlineOffset","src","createUrl","CommonTitle","campaignTitle","campaignDescription","CommonDivider","totalAmountFunded","goalAmount","daysLeft","ConnectPlease","SingleCampaignPage","featuredImgPHSrc","filterStartBlock","bigNumberToString","num","ethers","utils","formatEther","getDaysLeft","deadline","deadlineInMilliSec","toNumber","now","Date","Math","floor","getCampaignFromIpfs","axios","get","getCampaignIpfs","data","avatarImgPath","fundingPeriodInDays","walletAddress","campaignOwner","goalAchieved","isExists","isOwnerWithdraw","campaignFromIpfs","console","Error","size","endIcon","gutterBottom","useMemo","web3Library","provider","providers","Web3Provider","window","ethereum","contract","Contract","createContractData","moralisAuth","wait","txRecept","getCampaignDataOfFunder","funder","fundFilter","filters","Fund","queryFilter","fundEvents","length","campaignsData","map","topics","getCampaignIdOfCreator","creator","createFilter","Create","createEvents","ids"],"mappings":"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","file":"static/js/14.4dcef0ba.chunk.js","sourcesContent":["/** @format */\n\n//React\nimport React, {  useState } from \"react\";\n\n//Third Party\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputBase from \"@mui/material/InputBase\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { alpha, styled } from \"@mui/material/styles\";\n\nimport { useMoralis,  useWeb3Contract } from \"react-moralis\";\nimport {  useNotification } from \"web3uikit\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\n//App\nimport CommonButton from \"../CommonButton/CommonButton\";\nimport { contractAddresses, abi } from \"../../constants\";\nimport { getRecept } from \"../../helpers/web3Helpers\";\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"spaceBetween\",\n\n  alignItems: \"center\",\n  bgcolor: \"background.paper\",\n\n  boxShadow: 24,\n  p: 3,\n};\n\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\n  \"label + &\": {\n    marginTop: theme.spacing(3),\n  },\n  \"& .MuiInputBase-input\": {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.mode === \"light\" ? \"#fcfcfb\" : \"#2b2b2b\",\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    padding: \"10px 12px\",\n\n    transition: theme.transitions.create([\n      \"border-color\",\n      \"background-color\",\n      \"box-shadow\",\n    ]),\n\n    \"&:focus\": {\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}));\n\ntype Props = {\n  campaignHash: string;\n  isCampaignOpen: boolean | undefined;\n};\n\ninterface contractAddressesInterface {\n  [key: string]: string[];\n}\n\n//Component\nexport default function FundModal({ campaignHash, isCampaignOpen }: Props) {\n  const [open, setOpen] = React.useState(false);\n  const [fundVal, setFundVal] = React.useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const dispatchNotification = useNotification();\n  const { Moralis, chainId: chainIdHex } = useMoralis();\n  const addresses: contractAddressesInterface = contractAddresses;\n  const chainId: string = parseInt(chainIdHex!).toString();\n  const crowdFundAddress =\n    chainId in contractAddresses ? addresses[chainId][0] : null;\n  //Handlers\n  const handleFundValChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFundVal(event.currentTarget.value);\n  };\n\n  const { runContractFunction: fundCampaign } = useWeb3Contract({\n    abi: abi,\n    contractAddress: crowdFundAddress!,\n    functionName: \"fundCampaign\",\n  });\n  const handleFund = async (e: any, fundVal: string) => {\n    setIsLoading(true);\n    await fundCampaign({\n      async onSuccess(tx: any) {\n        const txRecept = await getRecept(tx);\n        //Successful Transaction\n        if (txRecept.status === 1) {\n          dispatchNotification({\n            message: \"Transaction successful!\",\n            position: \"topR\",\n            type: \"success\",\n          });\n          setIsLoading(false);\n          setOpen(false);\n        }\n      },\n\n      onError(error) {\n        setIsLoading(false);\n        dispatchNotification({\n          message: \"Transaction reverted!\",\n          position: \"topR\",\n          type: \"error\",\n        });\n      },\n      params: {\n        msgValue: Moralis.Units.ETH(fundVal),\n        params: {\n          hash: campaignHash,\n        },\n      },\n    });\n  };\n\n  //--------------\n  return (\n    <div>\n      <CommonButton\n        text=\"Fund Campaign\"\n        variant=\"contained\"\n        className=\"bg-primary-color my-3 \"\n        disabled={!isCampaignOpen}\n        onClick={handleOpen}\n      />\n      <Modal\n        open={open}\n        onClose={handleClose}\n      >\n        <Box sx={style}>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            className=\"text-center\"\n            sx={{ textAlign: \"center\" }}\n          >\n            ETH\n          </Typography>\n          <FormControl\n            variant=\"standard\"\n            sx={{\n              dispay: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-between\",\n              alignItems: \"stretch\",\n            }}\n          >\n            <InputLabel shrink htmlFor=\"Amount\">\n              Amount:\n            </InputLabel>\n            <BootstrapInput\n              id=\"Amount\"\n              type=\"number\"\n              value={fundVal}\n              onChange={handleFundValChange}\n              inputProps={{ \"aria-label\": \"\" }}\n            />\n            <Typography sx={{ color: \"red\", fontSize: \"10px\" }} component=\"p\">\n              Minimum amount is 0.001 ETH\n            </Typography>\n            <CommonButton\n              text=\"Fund &#8594;\"\n              disabled={isLoading || !isCampaignOpen }\n              variant=\"contained\"\n              onClick={(e) => handleFund(e, fundVal)}\n              className=\"mt-3\"\n            />\n            {isLoading && (\n              <div className=\"flex justify-center items-center my-2\">\n                {\" \"}\n                <CircularProgress />{\" \"}\n              </div>\n            )}\n          </FormControl>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n","/** @format */\n//React\nimport { useEffect, useState } from \"react\";\n\n//Third Party\nimport { useLocation } from \"react-router-dom\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport { useMoralis, useWeb3Contract } from \"react-moralis\";\nimport { useNotification } from \"web3uikit\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ReactMarkdown from \"react-markdown\";\n\n//App\nimport ConnectPlease from \"../../components/ConnectPlease/ConnectPlease\";\nimport CommonTitle from \"../../components/CommonTitle/CommonTitle\";\nimport CommonButton from \"../../components/CommonButton/CommonButton\";\nimport useContract from \"../../hooks/useContract\";\nimport { createUrl, getReadableCampaign } from \"../../helpers/helpers\";\nimport FundModal from \"../../components/FundModal/FundModal\";\nimport CommonDivider from \"../../components/CommonDivider/CommonDivider\";\n\n//Component\nconst SingleCampaign = () => {\n  //States\n  const [campaign, setCampaign] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  //Variables\n\n  //Hooks\n  const { isWeb3Enabled } = useMoralis();\n  const dispatchNotification = useNotification();\n  const contractData = useContract();\n  //Contract functions\n  const { runContractFunction: getCampaignByHash } = useWeb3Contract({\n    abi: contractData?.abi,\n    contractAddress: contractData?.crowdFundAddress || undefined,\n    functionName: \"getCampaignByHash\",\n  });\n  const location: any = useLocation();\n  const campaignHash = location.state.hash;\n  //Effects\n  useEffect(() => {\n    if (!isWeb3Enabled) return;\n    getCampaign();\n  }, [isWeb3Enabled,campaignHash]);\n\n  async function getCampaign() {\n    setError(null);\n    try {\n      const hash = campaignHash\n      if (!hash) return;\n      const handleSuccess = async (txCampaign: any) => {\n        try {\n          const campaign = await getReadableCampaign(txCampaign);\n          setCampaign(campaign);\n        } catch (e: any) {\n          setError(e.message);\n        }\n      };\n\n      await getCampaignByHash({\n        onSuccess(tx) {\n          handleSuccess(tx);\n        },\n        onError(e) {\n          setError(e.message);\n        },\n        params: { params: { hash: hash } },\n      });\n    } catch (e: any) {\n      setError(e?.message);\n      dispatchNotification({\n        message: \"Loading failed!\",\n        type: \"error\",\n        position: \"topR\",\n      });\n    }\n  }\n\n  return (\n    <div className=\"w-3/4 mx-auto px-5 py-3 border border--white-color-dark border-[.5px] m-2 my-4\">\n      {isWeb3Enabled ? (\n        <>\n          {campaign ? (\n            <>\n              <div className=\"flex justify-center py-2 \">\n                {campaign.headerImgPath && (\n                  <img\n                    style={{\n                      outline: \"rgba(0, 0, 0, 0.12)  solid 0.5px\",\n                      outlineOffset: \"3px\",\n                    }}\n                    src={createUrl(campaign.headerImgPath)}\n                  />\n                )}{\" \"}\n              </div>\n\n              <CommonTitle\n                text={campaign.campaignTitle}\n                className=\"text-center text-lg\ttext-bold mt-2\"\n              />\n              <div>\n                <h3 className=\"italic font-bold\t\">Story:</h3>\n                <ReactMarkdown>{campaign.campaignDescription}</ReactMarkdown>\n                <CommonDivider className=\"my-3\" />\n                <div className=\"flex justify-between items-center w-full mt-4\t\">\n                  <div className=\"flex flex-col flex-1\">\n                    <p className=\"text-lime-600 font-bold text-primary-color\">\n                      <span>Funded Amount: </span>{\" \"}\n                      <span>{campaign.totalAmountFunded}</span>\n                    </p>\n                    <p>\n                      {\" \"}\n                      <span>Goal Amount:</span>{\" \"}\n                      <span>{campaign.goalAmount}</span>\n                    </p>\n                  </div>\n\n                  <FundModal\n                    campaignHash={campaign.campaignHash}\n                    isCampaignOpen={campaign.isCampaignOpen}\n                  />\n                  <p className=\"flex-1 text-right text-secondary-color\t\">\n                    {\" \"}\n                    <AccessTimeIcon />{\" \"}\n                    {campaign.daysLeft >= 0 ? (\n                      <span>{`${campaign.daysLeft} Days Left`}</span>\n                    ) : (\n                      <span>Funding Time Finished</span>\n                    )}\n                  </p>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\" \">\n              {error ? (\n                <span className=\"text-red-600\">Not Fund! </span>\n              ) : (\n                <div className=\"flex items-center \">\n                  <span className=\"italic mr-3\">Loading ...</span>{\" \"}\n                  <CircularProgress />\n                </div>\n              )}\n            </div>\n          )}\n        </>\n      ) : (\n        <ConnectPlease />\n      )}\n    </div>\n  );\n};\n\nexport default SingleCampaign;\n","/** @format */\n\n//App\nimport SingleCampaign from \"../features/SingleCampaign/SingleCampaign\";\ntype Props = {};\n\nfunction SingleCampaignPage({}: Props) {\n  return (\n    <>\n      <SingleCampaign />\n    </>\n  );\n}\n\nexport default SingleCampaignPage;\n","/** @format */\n\nexport const featuredHash =\n  \"bafybeihssw3k2awihbgie5ej7k7k2pn62osmbvyuhzlode3hz746p4es6a/Latimar\";\nexport const featuredImgPHSrc =\n  \"https://images.unsplash.com/photo-1599658880436-c61792e70672?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n\nexport const recommendedIdes = [8, 10, 7];\n\nconst contractBlockNumberRinkeby = 11321318;\nexport  const filterStartBlock =\n  process.env.NODE_ENV === \"development\" ? 0 : contractBlockNumberRinkeby;","/** @format */\n//Third Party\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\nexport function bigNumberToNumber(num: any) {\n  return num.toNumber();\n}\n\nexport function bigNumberToString(num: any) {\n  return ethers.utils.formatEther(num);\n}\n\nexport function createUrl(hash: string) {\n  return `https://ipfs.io/ipfs/${hash}`;\n}\n\nexport function getDaysLeft(deadline: BigNumber): number {\n  const deadlineInMilliSec = bigNumberToNumber(deadline) * 1000;\n  const now = Date.now();\n  const daysLeft = Math.floor((deadlineInMilliSec - now) / (24 * 3600 * 1000));\n  return daysLeft;\n}\n\nexport async function getCampaignFromIpfs(hash: string) {\n  const getCampaignIpfs = (await axios.get(createUrl(hash))).data;\n  const {\n    avatarImgPath,\n    campaignDescription,\n    campaignTitle,\n    fundingPeriodInDays,\n    goalAmount,\n    headerImgPath,\n    walletAddress,\n  }: any = getCampaignIpfs;\n  return {\n    avatarImgPath,\n    campaignDescription,\n    campaignTitle,\n    fundingPeriodInDays,\n    goalAmount,\n    headerImgPath,\n    walletAddress,\n  };\n}\n\nexport async function getReadableCampaign(txCampaign: any) {\n  const {\n    campaignHash,\n    campaignOwner,\n    deadline,\n    goalAchieved,\n    isCampaignOpen,\n    isExists,\n    totalAmountFunded,\n    isOwnerWithdraw,\n  }: any = txCampaign;\n  try {\n    const campaignFromIpfs = await getCampaignFromIpfs(campaignHash);\n    const {\n      avatarImgPath,\n      campaignDescription,\n      campaignTitle,\n      fundingPeriodInDays,\n      goalAmount,\n      headerImgPath,\n      walletAddress,\n    }: any = campaignFromIpfs;\n\n    const daysLeft = getDaysLeft(deadline);\n    const campaign = {\n      campaignHash,\n      campaignDescription,\n      campaignOwner,\n      daysLeft,\n      isCampaignOpen,\n      totalAmountFunded: bigNumberToString(totalAmountFunded),\n      avatarImgPath,\n      isExists,\n      campaignTitle,\n      fundingPeriodInDays,\n      goalAmount,\n      headerImgPath,\n      goalAchieved,\n      isOwnerWithdraw,\n    };\n    return campaign;\n  } catch (e: any) {\n    console.error(e);\n    throw new Error(e.message);\n  }\n}\ntype CampaignData = {\n  campaignHash: string;\n  campaignTitle: string;\n  dispatchNotification: Function;\n};\n\nexport const addCampaignToBookmarks = ({\n  campaignTitle,\n  campaignHash,\n  dispatchNotification,\n}: CampaignData) => {\n  const bookmarksLocal = localStorage.getItem(\"bookmarks\");\n\n  if (bookmarksLocal) {\n    const bookmarksArr = JSON.parse(bookmarksLocal);\n    const hashesArr = bookmarksArr.map((c: CampaignData) => c.campaignHash);\n    if (hashesArr.includes(campaignHash)) {\n      dispatchNotification({\n        message: \"campaign already bookmarked\",\n        position: \"topR\",\n        type: \"warning\",\n      });\n\n      return;\n    }\n    localStorage.setItem(\n      \"bookmarks\",\n      JSON.stringify([...bookmarksArr, { campaignTitle, campaignHash }])\n    );\n    dispatchNotification({\n      message: \"campaign  bookmarked\",\n      position: \"topR\",\n      type: \"success\",\n    });\n  } else {\n    localStorage.setItem(\n      \"bookmarks\",\n      JSON.stringify([{ campaignTitle, campaignHash }])\n    );\n  }\n};\n","/** @format */\n\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { SxProps } from \"@mui/system\";\ninterface CommonButtonPropTypes {\n  text: string;\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\n  size?: \"small\" | \"medium\" | \"large\" | undefined;\n  variant?: \"text\" | \"outlined\" | \"contained\" | undefined;\n  className?: string;\n  sx?: SxProps;\n  disabled?: boolean;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  endIcon?: React.ReactNode;\n}\n\nconst CommonButton = ({\n  text,\n  variant,\n  sx,\n  size,\n  className,\n  type,\n  disabled,\n  onClick,\n  endIcon,\n}: CommonButtonPropTypes) => {\n  return (\n    <Button\n      className={disabled ? \" text-white\" : className}\n      variant={variant}\n      sx={sx}\n      size={size}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n      endIcon={endIcon}\n    >\n      {text}\n    </Button>\n  );\n};\n\nexport default CommonButton;\n","/** @format */\n\n//Third Party\nimport { Typography, TypographyTypeMap } from \"@mui/material\";\n\ntype Props = {\n  text: string;\n  className?: string;\n  variant?: TypographyTypeMap[\"props\"][\"variant\"];\n  component?: React.ElementType;\n};\n\nfunction CommonTitle({ text, className, variant, component }: Props) {\n  return (\n    <Typography\n      className={`font-light uppercase  -text--heading-black-color  leading-relaxed  ${className}`}\n      gutterBottom\n      variant={variant}\n      component={component ? component : \"div\"}\n    >\n      {text}\n    </Typography>\n  );\n}\n\nexport default CommonTitle;\n","/** @format */\n\nimport {  useMemo } from \"react\";\n\n//Third Party\nimport { useMoralis } from \"react-moralis\";\nimport { contractAddresses, abi } from \"../constants\";\n\ninterface contractAddressesInterface {\n  [key: string]: string[];\n}\n\nconst useContract = () => {\n  //get contract and contract address\n  const { chainId: chainIdHex, Moralis, isWeb3Enabled } = useMoralis();\n  const createContractData = (chainIdHex: string | null) => {\n    if (!chainIdHex || !isWeb3Enabled) return null;\n    const ethers = Moralis.web3Library;\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    const addresses: contractAddressesInterface = contractAddresses;\n    const chainId: string = parseInt(chainIdHex!).toString();\n    const crowdFundAddress =\n      chainId in contractAddresses ? addresses[chainId][0] : undefined;\n    //@ts-ignore\n    const contract = new ethers.Contract(crowdFundAddress!, abi, provider);\n    return { contract, crowdFundAddress, abi };\n  };\n\n  return useMemo(\n    () => createContractData(chainIdHex),\n    [chainIdHex, isWeb3Enabled]\n  );\n};\n\nexport default useContract;\n","//Third Party\nimport { ConnectButton} from \"web3uikit\";\n\n\n\nconst ConnectPlease = () => {\n    return (\n      <div className=\"flex items-center font-bold\">\n        Please <ConnectButton  moralisAuth={false}  /> to Metamask and  Rinkeby network to use this App.\n      </div>\n    );\n  };\n\n  export default ConnectPlease","/** @format */\nimport { Contract } from \"ethers\";\nimport { bigNumberToString } from \"./helpers\";\nimport { filterStartBlock } from \"../constants\";\n\nexport const getRecept = async (tx: any) => {\n  const txRecept = await tx.wait(1);\n  return txRecept;\n};\n\nexport const getCampaignDataOfFunder = async (\n  contract: Contract,\n  funder: string | null\n) => {\n  const fundFilter = contract.filters.Fund(funder, null);\n  try {\n    const fundEvents = await contract.queryFilter(fundFilter, filterStartBlock);\n    //when user not fund and campaign\n    if (fundEvents.length === 0) return [];\n    const campaignsData = fundEvents.map((event) => {\n      return {\n        value: bigNumberToString(event.topics[2]),\n        id: parseInt(event.topics[3]),\n      };\n    });\n    return campaignsData;\n  } catch (e) {}\n};\n\nexport const getCampaignIdOfCreator = async (\n  contract: Contract,\n  creator: string | null\n) => {\n  const createFilter = contract.filters.Create(creator, null);\n  try {\n    const createEvents = await contract.queryFilter(\n      createFilter,\n      filterStartBlock\n    );\n    //when user got notCreated any Campaign\n    if (createEvents.length === 0) return [];\n    const ids = createEvents.map((event) => parseInt(event.topics[2]));\n    return ids;\n  } catch (e) {}\n};\n"],"sourceRoot":""}