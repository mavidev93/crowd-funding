{"version":3,"sources":["features/CreatedCampaigns/CreatedCampaigns.tsx"],"names":["CreatedCampaigns","useMoralis","account","isWeb3Enabled","useState","ids","setIds","contractData","useContract","campaigns","useGetCampaigns","withdrawFunds","useWeb3Contract","abi","contractAddress","crowdFundAddress","undefined","functionName","runContractFunction","closeCampaign","handleWithdraw","hash","params","handleCloseCampaign","useEffect","getId","getCampaignIdOfCreator","contract","className","length","reverse","map","c","campaign","text","variant","onClick","e","campaignHash","disabled","isOwnerWithdraw","goalAchieved","color","isCampaignOpen","campaignTitle"],"mappings":"gQAyGeA,UAxFU,WACvB,MAAmCC,cAA3BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,cAGjB,EAAsBC,mBAA0B,MAAhD,mBAAOC,EAAP,KAAYC,EAAZ,KAEMC,EAAeC,cAEfC,EAAYC,YAAgBL,GAELM,EAAkBC,YAAgB,CAC7DC,IAAG,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAcM,IACnBC,iBAA6B,OAAZP,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,wBAAoBC,EACnDC,aAAc,kBAHRC,oBAMqBC,EAAkBP,YAAgB,CAC7DC,IAAG,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAcM,IACnBC,iBAA6B,OAAZP,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,wBAAoBC,EACnDC,aAAc,kBAHRC,oBAOFE,EAAc,iDAAG,WAAOC,GAAP,2FACdV,EAAc,CAAEW,OAAQ,CAAEA,OAAQ,CAAED,KAAMA,MAD5B,2CAAH,sDAIdE,EAAmB,iDAAG,WAAOF,GAAP,oGAEjBF,EAAc,CAAEG,OAAQ,CAAEA,OAAQ,CAAED,KAAMA,MAFzB,8GAAH,sDAkBzB,OAXAG,qBAAU,WACR,GAAKtB,GAAYK,EAAjB,CAIA,IAAMkB,EAAK,iDAAG,8GACMC,YAAuBnB,EAAaoB,SAAUzB,GADpD,QACNG,EADM,SAELC,EAAOD,GAFF,2CAAH,qDAIXoB,GALC,MAFCnB,EAAO,KAQV,GAAE,CAACJ,IAEF,qBAAK0B,UAAU,0BAAf,SACGzB,EACC,mCACGM,EAEJA,EAAUoB,OAAS,YAAIpB,GAAWqB,UAAUC,KAAI,SAACC,GAAD,OACzC,sBAAKJ,UAAU,0BAAf,UACE,cAAC,IAAD,CAAkBK,SAAUD,IAE5B,sBAAKJ,UAAU,oBAAf,UACE,cAAC,IAAD,CACEM,KAAK,iBACLC,QAAQ,YACRC,QAAS,SAACC,GAAD,OAAOjB,EAAeY,EAAEM,aAAxB,EACTC,SAAUP,EAAEQ,kBAAoBR,EAAES,eAEpC,cAAC,IAAD,CACEL,QAAS,SAACC,GAAD,OAAOd,EAAoBS,EAAEM,aAA7B,EACTI,MAAM,QACNP,QAAQ,YACRP,UAAU,OACVW,UAAWP,EAAEW,eALf,4BASA,qBAAKf,UAAU,UAAf,SACE,cAAC,IAAD,CACEU,aAAcN,EAAEM,aAChBM,cAAeZ,EAAEY,uBAtBqBZ,EAAEM,aADP,IA4BxC,mDAA0B,OAGjC,cAAC,IAAD,KAIP,C","file":"static/js/27.f543f928.chunk.js","sourcesContent":["/** @format */\nimport { useEffect, useState } from \"react\";\n\n//Third party\nimport { useMoralis, useWeb3Contract } from \"react-moralis\";\nimport Button from \"@mui/material/Button\";\n\n//App\nimport useGetCampaigns from \"../../hooks/useGetCampaigns\";\nimport useContract from \"../../hooks/useContract\";\nimport { getCampaignIdOfCreator } from \"../../helpers/web3Helpers\";\nimport CommonButton from \"../../components/CommonButton/CommonButton\";\nimport CampaignCardData from \"../../components/CampaignCardData/CampaignCardData\";\nimport ReadMore from \"../../components/ReadMore/ReadMore\";\nimport ConnectPlease from \"../../components/ConnectPlease/ConnectPlease\";\n\n\nconst CreatedCampaigns = () => {\n  const { account, isWeb3Enabled } = useMoralis();\n\n  //States\n  const [ids, setIds] = useState<null | number[]>(null);\n\n  const contractData = useContract();\n\n  const campaigns = useGetCampaigns(ids);\n  //Contract Functions\n  const { runContractFunction: withdrawFunds } = useWeb3Contract({\n    abi: contractData?.abi,\n    contractAddress: contractData?.crowdFundAddress || undefined,\n    functionName: \"withdrawFunds\",\n  });\n\n  const { runContractFunction: closeCampaign } = useWeb3Contract({\n    abi: contractData?.abi,\n    contractAddress: contractData?.crowdFundAddress || undefined,\n    functionName: \"closeCampaign\",\n  });\n\n  //Handlers\n  const handleWithdraw = async (hash: any) => {\n     await withdrawFunds({ params: { params: { hash: hash } } });\n  };\n\n  const handleCloseCampaign = async (hash: string) => {\n    try {\n       await closeCampaign({ params: { params: { hash: hash } } });\n    } catch (e) {}\n  };\n\n  //Effects\n  useEffect(() => {\n    if (!account || !contractData) {\n      setIds(null);\n      return;\n    }\n    const getId = async () => {\n      const ids = await getCampaignIdOfCreator(contractData.contract, account);\n      ids && setIds(ids);\n    };\n    getId();\n  }, [account]);\n  return (\n    <div className=\"m-3 md:w-3/5 md:mx-auto\">\n      {isWeb3Enabled ? (\n        <>\n          {campaigns ?\n            //check user with zero campaigns and get recently created campaigns first\n       campaigns.length?  [...campaigns].reverse().map((c) => (\n              <div className=\"m-3 py-2 px-3 shadow-md\" key={c.campaignHash}>\n                <CampaignCardData campaign={c} />\n\n                <div className=\"flex items-center\">\n                  <CommonButton\n                    text=\"withdraw Funds\"\n                    variant=\"contained\"\n                    onClick={(e) => handleWithdraw(c.campaignHash)}\n                    disabled={c.isOwnerWithdraw || !c.goalAchieved}\n                  />\n                  <Button\n                    onClick={(e) => handleCloseCampaign(c.campaignHash)}\n                    color=\"error\"\n                    variant=\"contained\"\n                    className=\"ml-2\"\n                    disabled={!c.isCampaignOpen}\n                  >\n                    Close Campaign\n                  </Button>\n                  <div className=\"ml-auto\">\n                    <ReadMore\n                      campaignHash={c.campaignHash}\n                      campaignTitle={c.campaignTitle}\n                    />\n                  </div>\n                </div>\n              </div>\n            )):<p>No Campaign Found!</p>:null}\n        </>\n      ) : (\n        <ConnectPlease />\n      )}\n    </div>\n  );\n};\n\nexport default CreatedCampaigns;\n"],"sourceRoot":""}