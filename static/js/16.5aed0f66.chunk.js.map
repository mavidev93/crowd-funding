{"version":3,"sources":["components/ImageCrop/canvasPreview.ts","components/ImageCrop/ImageCrop.tsx","components/ImageCrop/useDebounceEffect.ts","components/CustomError/CustomError.tsx","components/TextInput/TextInput.tsx","features/CreateCampaign/createCampaign.static.ts","features/CreateCampaign/CreateCampaign.tsx","helpers/web3Storage.ts","features/CreateCampaign/createCampaign.utils.ts","pages/CreateNewProject.tsx","components/CommonButton/CommonButton.tsx","constants/statics.ts","hooks/useContract.tsx","components/ConnectPlease/ConnectPlease.tsx"],"names":["TO_RADIANS","Math","PI","canvasPreview","image","canvas","crop","scale","rotate","ctx","getContext","Error","scaleX","naturalWidth","width","scaleY","naturalHeight","height","pixelRatio","window","devicePixelRatio","floor","imageSmoothingQuality","cropX","x","cropY","y","rotateRads","centerX","centerY","save","translate","drawImage","restore","ImageCrop","fn","waitTime","deps","imgSrc","aspect","unit","initialAspectWidth","setCanvas","initialAspectHeight","useState","setCrop","completedCrop","setCompletedCrop","imgRef","useRef","previewCanvasRef","current","useEffect","t","setTimeout","apply","undefined","clearTimeout","className","Boolean","onChange","_","percentCrop","onComplete","c","ref","alt","src","onLoad","e","currentTarget","mediaWidth","mediaHeight","centerCrop","makeAspectCrop","centerAspectCrop","id","nanoid","style","border","objectFit","CustomError","name","component","TextInput","label","placeholder","validate","value","inputClassName","disabled","useField","field","htmlFor","initialValues","campaignTitle","goalAmount","fundingPeriodInDays","walletAddress","validationSchema","Yup","shape","required","min","max","typeError","CreateCampaign","setImgSrc","imgSrcAvatar","setImgSrcAvatar","imgCanvas","setImgCanvas","imgAvatarCanvas","setImgAvatarCanvas","isLoading","setIsLoading","editorVal","setEditorVal","contractData","useContract","useMoralis","isWeb3Enabled","Moralis","account","navigate","useNavigate","dispatchNotification","useNotification","createCampaign","useWeb3Contract","abi","contractAddress","crowdFundAddress","functionName","runContractFunction","client","Web3Storage","token","process","makeFileObjects","obj","objName","blob","Blob","JSON","stringify","type","File","storeFiles","files","put","cid","sendCanvasToIpfs","canvasName","Promise","resolve","toBlob","fileName","file","path","message","position","handleSubmit","values","actions","result","headerImgPath","avatarImgPath","projectImgUrl","projectAvatarUrl","campaignObj","campaignDescription","handleSuccess","tx","resetForm","wait","state","hash","handleError","error","onSuccess","onError","params","_goalAmount","Units","ETH","_fundingPeriodInDays","handlePhotoInputChange","event","img","Image","objectUrl","URL","createObjectURL","addEventListener","target","handleAvatarImgInputChange","onSubmit","ethers","utils","isAddress","validateEthereumAddress","CommonButton","text","variant","CustomLinerProgress","ConnectPlease","CreateNewProject","props","sx","size","onClick","endIcon","featuredImgPHSrc","chainIdHex","chainId","useMemo","web3Library","provider","providers","Web3Provider","ethereum","addresses","contractAddresses","parseInt","toString","contract","Contract","createContractData","moralisAuth"],"mappings":"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","file":"static/js/16.5aed0f66.chunk.js","sourcesContent":["import { PixelCrop } from 'react-image-crop'\n\nconst TO_RADIANS = Math.PI / 180\n\nexport async function canvasPreview(\n  image: HTMLImageElement,\n  canvas: HTMLCanvasElement,\n  crop: PixelCrop,\n  scale = 1,\n  rotate = 0,\n) {\n  const ctx = canvas.getContext('2d')\n\n  if (!ctx) {\n    throw new Error('No 2d context')\n  }\n\n  const scaleX = image.naturalWidth / image.width\n  const scaleY = image.naturalHeight / image.height\n  // devicePixelRatio slightly increases sharpness on retina devices\n  // at the expense of slightly slower render times and needing to\n  // size the image back down if you want to download/upload and be\n  // true to the images natural size.\n  const pixelRatio = window.devicePixelRatio\n  // const pixelRatio = 1\n\n  canvas.width = Math.floor(crop.width * scaleX * pixelRatio)\n  canvas.height = Math.floor(crop.height * scaleY * pixelRatio)\n\n  ctx.scale(pixelRatio, pixelRatio)\n  ctx.imageSmoothingQuality = 'high'\n\n  const cropX = crop.x * scaleX\n  const cropY = crop.y * scaleY\n\n  const rotateRads = rotate * TO_RADIANS\n  const centerX = image.naturalWidth / 2\n  const centerY = image.naturalHeight / 2\n\n  ctx.save()\n\n  // 5) Move the crop origin to the canvas origin (0,0)\n  ctx.translate(-cropX, -cropY)\n  // 4) Move the origin to the center of the original position\n  ctx.translate(centerX, centerY)\n  // 3) Rotate around the origin\n  ctx.rotate(rotateRads)\n  // 2) Scale the image\n  ctx.scale(scale, scale)\n  // 1) Move the center of the image to the origin (0,0)\n  ctx.translate(-centerX, -centerY)\n  ctx.drawImage(\n    image,\n    0,\n    0,\n    image.naturalWidth,\n    image.naturalHeight,\n    0,\n    0,\n    image.naturalWidth,\n    image.naturalHeight,\n  )\n\n  ctx.restore()\n}\n","/** @format */\n\nimport React, { useState, useRef, useEffect } from \"react\";\n\n//Third Party\nimport ReactCrop, {\n  centerCrop,\n  makeAspectCrop,\n  Crop,\n  PixelCrop,\n} from \"react-image-crop\";\nimport { canvasPreview } from \"./canvasPreview\";\nimport { useDebounceEffect } from \"./useDebounceEffect\";\n\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport { nanoid } from \"nanoid\";\n\n//Types\ntype props = {\n  imgSrc: string;\n  aspect?: number;\n  unit?: \"px\" | \"%\" | undefined;\n  initialAspectWidth?: number;\n  initialAspectHeight?: number;\n  setCanvas?: React.Dispatch<React.SetStateAction<any>>;\n};\n\n// This is to demonstate how to make and center a % aspect crop\n// which is a bit trickier so we use some helper functions.\n\nfunction centerAspectCrop(\n  mediaWidth: number,\n  mediaHeight: number,\n  aspect: number,\n  unit: props[\"unit\"] = \"%\",\n  width: number = 90\n) {\n  return centerCrop(\n    makeAspectCrop(\n      {\n        unit: unit,\n        width: width,\n      },\n      aspect,\n      mediaWidth,\n      mediaHeight\n    ),\n    mediaWidth,\n    mediaHeight\n  );\n}\n\n//Component\nfunction ImageCrop({\n  imgSrc,\n  aspect,\n  unit,\n  initialAspectWidth,\n  initialAspectHeight,\n  setCanvas,\n}: props) {\n  //State - Ref\n  const [crop, setCrop] = useState<Crop>();\n  const [completedCrop, setCompletedCrop] = useState<PixelCrop>();\n\n  const imgRef = useRef<HTMLImageElement>(null);\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  //constants\n  const scale = 1;\n  const rotate = 0;\n\n  //Hooks\n  useDebounceEffect(\n    async () => {\n      if (\n        completedCrop?.width &&\n        completedCrop?.height &&\n        imgRef.current &&\n        previewCanvasRef.current\n      ) {\n        // We use canvasPreview as it's much faster than imgPreview.\n        canvasPreview(\n          imgRef.current,\n          previewCanvasRef.current,\n          completedCrop,\n          scale,\n          rotate\n        );\n      }\n    },\n    100,\n    [completedCrop, scale, rotate]\n  );\n\n  //Handlers\n  function onImageLoad(e: React.SyntheticEvent<HTMLImageElement>) {\n    if (aspect) {\n      const { width, height } = e.currentTarget;\n      if (width >= 500) {\n        setCrop(\n          centerAspectCrop(width, height, aspect, unit, initialAspectWidth)\n        );\n      } else {\n      }\n    }\n  }\n\n  //Effects\n  useEffect(() => {\n    setCanvas && setCanvas(previewCanvasRef.current);\n  }, [completedCrop?.width,completedCrop?.height]);\n\n  return (\n    <div className=\"\">\n      {Boolean(imgSrc) && (\n        <ReactCrop\n          crop={crop}\n          onChange={(_, percentCrop) => setCrop(percentCrop)}\n          onComplete={(c) => setCompletedCrop(c)}\n          aspect={aspect}\n        >\n          <img ref={imgRef} alt=\"Crop me\" src={imgSrc} onLoad={onImageLoad} />\n        </ReactCrop>\n      )}\n      <div>\n        {Boolean(completedCrop) && (\n          <canvas\n            ref={previewCanvasRef}\n            id={nanoid()}\n            style={{\n              border: \"1px solid black\",\n              objectFit: \"contain\",\n              width: completedCrop?.width,\n              height: completedCrop?.height,\n            }}\n            className=\"my-2\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCrop;\n","import { useEffect, DependencyList } from 'react'\n\nexport function useDebounceEffect(\n  fn: () => void,\n  waitTime: number,\n  deps?: DependencyList|any,\n) {\n  useEffect(() => {\n    const t = setTimeout(() => {\n      fn.apply(undefined, deps)\n    }, waitTime)\n\n    return () => {\n      clearTimeout(t)\n    }\n  }, deps)\n}","import { ErrorMessage } from 'formik'\nimport React from 'react'\n\ntype Props = {\n    name:string\n}\n\nconst CustomError = ({name}: Props) => {\n  return (\n    <ErrorMessage name={name} component='div' className='text-red-600 text-sm capitalize mt-1'/>\n  )\n}\n\nexport default CustomError","/** @format */\n\nimport { useField } from \"formik\";\nimport CustomError from \"../CustomError/CustomError\";\ninterface TextInputProps {\n  label: string;\n  name: string;\n  className?: string;\n  placeholder: string;\n  validate?: (value: any) => string | undefined;\n  value?: string | number | readonly string[] ;\n  inputClassName?:string;\n  disabled?:boolean\n}\n\nconst TextInput = ({\n  label,\n  name,\n  className,\n  placeholder,\n  validate,\n  value,\n  inputClassName,\n  disabled\n}: TextInputProps) => {\n  const [field, meta, helper] = useField({\n    name,\n    className,\n    placeholder,\n    validate,\n  });\n\n  return (\n    <div className={`my-2  + ${className}`}>\n      {label && (\n        <label\n          htmlFor={name}\n          className=\"block text-gray-700 text-sm font-bold mb-2\"\n        >\n          {label}\n        </label>\n      )}\n      <div className=\"\">\n        <input\n          className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${inputClassName}`}\n          {...field}\n          value={value}\n        disabled={disabled}\n        />\n        <CustomError name={name} />\n      </div>\n    </div>\n  );\n};\n\nexport default TextInput;\n","/** @format */\n\nimport * as Yup from \"yup\";\n\nexport const initialValues = {\n  campaignTitle: \"\",\n  goalAmount: \"\",\n  fundingPeriodInDays: \"\",\n  walletAddress: \"\",\n};\nexport const validationSchema = Yup.object().shape({\n  campaignTitle: Yup.string().required(\"Required!\"),\n  fundingPeriodInDays: Yup.number().min(1).max(365).required(\"Required!\"),\n  goalAmount: Yup.number()\n    .min(0.001, \"should be more than 0.001\")\n    .typeError(\"you must specify a number\")\n    .required(\"Required!\"),\n});\n","/** @format */\nimport { useState } from \"react\";\n\n//Third party\nimport { Formik, Form } from \"formik\";\nimport { useMoralis,  useWeb3Contract } from \"react-moralis\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n//App\nimport CommonButton from \"../../components/CommonButton/CommonButton\";\nimport { useNotification } from \"web3uikit\";\nimport ImageCrop from \"../../components/ImageCrop/ImageCrop\";\nimport TextInput from \"../../components/TextInput/TextInput\";\nimport CustomLinerProgress from \"../../components/LinerProgress/LinerProgress/CustomLinerProgress\";\nimport ConnectPlease from \"../../components/ConnectPlease/ConnectPlease\";\nimport { makeStorageClient } from \"../../helpers/web3Storage\";\nimport useContract from \"../../hooks/useContract\";\nimport { initialValues, validationSchema } from \"./createCampaign.static\";\nimport { validateEthereumAddress } from \"./createCampaign.utils\";\n\ntype resultIpfsPromise = {\n  path: string;\n};\n\n//Component\nconst CreateCampaign = () => {\n  //States\n  const [imgSrc, setImgSrc] = useState<null | string>(null);\n  const [imgSrcAvatar, setImgSrcAvatar] = useState<null | string>(null);\n  const [imgCanvas, setImgCanvas] = useState<HTMLCanvasElement | null>(null);\n  const [imgAvatarCanvas, setImgAvatarCanvas] =\n    useState<HTMLCanvasElement | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [editorVal, setEditorVal] = useState<string>(\"\");\n\n  //Hooks\n  // const {  abi, crowdFundAddress } = useContract();\n  const contractData = useContract();\n\n  const { isWeb3Enabled, Moralis, account } = useMoralis();\n  const navigate = useNavigate();\n  const dispatchNotification = useNotification();\n  const {\n    runContractFunction: createCampaign,\n  } = useWeb3Contract({\n    abi: contractData?.abi || undefined,\n    contractAddress: contractData?.crowdFundAddress || undefined,\n    functionName: \"createCampaign\",\n  });\n\n  const client = makeStorageClient();\n\n  function makeFileObjects(obj: object, objName: string) {\n    const blob = new Blob([JSON.stringify(obj)], { type: \"application/json\" });\n    const files = [new File([blob], objName)];\n    return files;\n  }\n\n  async function storeFiles(files: any) {\n    const cid = await client.put(files);\n    return cid;\n  }\n\n  //Helper function\n  async function sendCanvasToIpfs(\n    canvas: HTMLCanvasElement,\n    canvasName: string\n  ): Promise<resultIpfsPromise | undefined> {\n    try {\n      const blob: Blob | null = await new Promise((resolve) =>\n        canvas.toBlob(resolve, \"image/png\")\n      );\n      const fileName = \"header-image.png\";\n      const file = new File([blob!], fileName);\n      const cid = await storeFiles([file]);\n      const path = `${cid}/${fileName}`;\n      return { path };\n    } catch {\n      dispatchNotification({\n        message: `sending ${canvasName} failed!`,\n        type: \"error\",\n        position: \"topR\",\n      });\n      return;\n    }\n  }\n\n  //Handlers\n  const handleSubmit = async (values: any, actions: any) => {\n    try {\n      setIsLoading(true);\n      if (!editorVal) throw \"campaign description is empty\";\n    } catch (e) {\n      typeof e === \"string\" &&\n        dispatchNotification({ message: e, type: \"error\", position: \"topR\" });\n      setIsLoading(false);\n      return;\n    }\n\n    let headerImgPath, avatarImgPath;\n    if (imgCanvas) {\n      const result = await sendCanvasToIpfs(imgCanvas, \"header image\");\n      if (result) {\n        ({ path: headerImgPath } = result);\n      }\n      if (imgAvatarCanvas) {\n        const result = await sendCanvasToIpfs(imgAvatarCanvas, \"avatar image\");\n        if (result) {\n          ({ path: avatarImgPath } = result);\n        }\n      }\n    }\n\n    const {\n      campaignTitle,\n      walletAddress,\n      projectImgUrl,\n      projectAvatarUrl,\n      goalAmount,\n      fundingPeriodInDays,\n    } = values;\n\n    const campaignObj = {\n      campaignTitle,\n      campaignDescription: editorVal,\n      walletAddress,\n      projectImgUrl,\n      projectAvatarUrl,\n      goalAmount,\n      fundingPeriodInDays,\n      headerImgPath,\n      avatarImgPath,\n    };\n\n    try {\n      const files = makeFileObjects(campaignObj, campaignTitle);\n\n      const cid = await storeFiles(files);\n\n      const path = `${cid}/${campaignTitle}`;\n\n      const handleSuccess = async (tx: any) => {\n        actions.resetForm();\n        await tx.wait(1);\n        setIsLoading(false);\n        dispatchNotification({\n          message: \"Project Created Successfully!\",\n          type: \"success\",\n          position: \"topR\",\n        });\n\n        navigate(`/campaigns/${campaignTitle}`, { state: { hash: path } });\n      };\n\n      const handleError = (error: any) => {\n        setIsLoading(false);\n        dispatchNotification({\n          message: \"Project Creation Failed\",\n          type: \"error\",\n          position: \"topR\",\n        });\n      };\n\n      await createCampaign({\n        onSuccess(tx: any) {\n          handleSuccess(tx);\n        },\n        onError(error) {\n          handleError(error);\n        },\n\n        params: {\n          params: {\n            hash: path,\n            _goalAmount: Moralis.Units.ETH(goalAmount),\n            _fundingPeriodInDays: fundingPeriodInDays,\n          },\n        },\n      });\n    } catch (e) {\n      setIsLoading(false);\n      dispatchNotification({\n        message: \"Project Creation Failed\",\n        type: \"error\",\n        position: \"topR\",\n      });\n    }\n  };\n\n  const handlePhotoInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    if (event.currentTarget.files) {\n      const img = new Image();\n      const objectUrl = URL.createObjectURL(event.currentTarget.files[0]);\n      img.addEventListener(\"load\", function () {\n        if (img.naturalWidth >= 500) {\n          setImgSrc(img.src);\n        } else {\n          dispatchNotification({\n            position: \"topR\",\n            type: \"error\",\n            message: \"incorrect image width\",\n          });\n          setImgSrc(null);\n          event.target.value = \"\";\n        }\n      });\n      img.src = objectUrl;\n    }\n  };\n\n  const handleAvatarImgInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    if (event.currentTarget.files) {\n      const img = new Image();\n      const objectUrl = URL.createObjectURL(event.currentTarget.files[0]);\n      img.addEventListener(\"load\", function () {\n        if (img.naturalWidth >= 50) {\n          setImgSrcAvatar(img.src);\n        } else {\n          dispatchNotification({\n            position: \"topR\",\n            type: \"error\",\n            message: \"incorrect image width\",\n          });\n          setImgSrcAvatar(null);\n          event.target.value = \"\";\n        }\n      });\n      img.src = objectUrl;\n    }\n  };\n\n  //Create JSX\n  const createForm = () => {\n    return (\n      <div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          <Form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 mx-6 mt-4\">\n            <TextInput\n              name=\"campaignTitle\"\n              label=\"Proposal Title\"\n              placeholder=\"Title\"\n            />\n            <TextInput\n              name=\"walletAddress\"\n              placeholder=\"\"\n              label=\"Creator Wallet Address\"\n              value={account || undefined}\n              validate={() => validateEthereumAddress(account)}\n              disabled={true}\n            />\n            <div className=\"mb-4\">\n              {/* <label\n                htmlFor=\"cryptos\"\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n              >\n                Select an option\n              </label> */}\n              {/* <Field\n                as=\"select\"\n                name=\"cryptos\"\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n              >\n                <option value=\"red\">ETH</option>\n                <option value=\"green\">USDT</option>\n                <option value=\"blue\">DAI</option>\n              </Field> */}\n              <TextInput\n                name=\"goalAmount\"\n                label=\"Goal Amount ETH\"\n                placeholder=\"\"\n              />\n              <TextInput\n                name=\"fundingPeriodInDays\"\n                label=\"Funding Period Days\"\n                placeholder=\"\"\n              />\n              <label className=\"block text-gray-700 text-sm font-bold mb-2  capitalize\">\n                campaign description\n              </label>\n              <SimpleMDE\n                value={editorVal}\n                onChange={(value: string) => setEditorVal(value)}\n              />\n\n              <div>\n                <label\n                  htmlFor=\"photo\"\n                  className=\"block  text-sm font-medium text-gray-900 dark:text-gray-300 border-2 p-2 my-2\"\n                >\n                  <FileUploadOutlinedIcon className=\"text-primary-color\" />{\" \"}\n                  Upload Project Image for Header\n                </label>\n                <input\n                  id=\"photo\"\n                  name=\"photo\n                \"\n                  type=\"file\"\n                  onChange={handlePhotoInputChange}\n                  className=\" hidden\"\n                  aria-describedby=\"file_input_help\"\n                />\n                {imgSrc && (\n                  <ImageCrop\n                    imgSrc={imgSrc}\n                    aspect={3 / 1}\n                    setCanvas={setImgCanvas}\n                  />\n                )}\n              </div>\n              <div>\n                <label\n                  htmlFor=\"avatar\"\n                  className=\"block text-sm font-medium text-gray-900 dark:text-gray-300 border-2 p-2 my-2\"\n                >\n                  <FileUploadOutlinedIcon className=\"text-primary-color\" />\n                  Upload Project Avatar Square Image\n                </label>\n                <input\n                  id=\"avatar\"\n                  name=\"avatar\"\n                  type=\"file\"\n                  onChange={handleAvatarImgInputChange}\n                  className=\"hidden\"\n                  aria-describedby=\"file_input_help\"\n                />\n                {imgSrcAvatar && (\n                  <ImageCrop\n                    imgSrc={imgSrcAvatar}\n                    aspect={1 / 1}\n                    unit=\"px\"\n                    initialAspectWidth={250}\n                    setCanvas={setImgAvatarCanvas}\n                  />\n                )}\n              </div>\n            </div>\n            <CommonButton\n              text=\"submit\"\n              variant=\"contained\"\n              className=\"bg-primary-color\"\n              type=\"submit\"\n              disabled={isLoading}\n            />\n            {isLoading && <CustomLinerProgress />}{\" \"}\n          </Form>\n        </Formik>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"mx-3 md:w-3/4 md:mx-auto m-2\">\n      <>\n        {isWeb3Enabled ? createForm() : <ConnectPlease />}\n        {!client &&\n          dispatchNotification({\n            message: \"ipfs connection failed\",\n            type: \"error\",\n            position: \"topR\",\n          })}\n      </>\n    </div>\n  );\n};\n\nexport default CreateCampaign;\n","/** @format */\n\nimport { Web3Storage } from \"web3.storage/dist/bundle.esm.min.js\";\n// import { Web3Storage } from \"web3.storage\";\nexport function getAccessToken() {\n  return process.env.REACT_APP_WEB3STORAGE_TOKEN;\n}\n\nexport function makeStorageClient() {\n // @ts-ignore\n  return new Web3Storage({\n    token: getAccessToken(),\n    // endpoint: new URL(\"https://api.web3.storage/pin\"),\n  });\n}\n","/** @format */\n\nimport { ethers } from \"ethers\";\n\nexport function validateEthereumAddress(value: any) {\n\n  let error;\n  if (!value) {\n    error = \"Required!\";\n  } else if (!ethers.utils.isAddress(value)) {\n    error = \"invalid address!\";\n  }\n  return error;\n}\n","import React from 'react'\n\n//App\nimport CreateProject from '../features/CreateCampaign/CreateCampaign'\n\ntype Props = {}\n\nconst CreateNewProject = (props: Props) => {\n  return (\n    <div>\n\n        <CreateProject/>\n    </div>\n  )\n}\n\nexport default CreateNewProject","/** @format */\n\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { SxProps } from \"@mui/system\";\ninterface CommonButtonPropTypes {\n  text: string;\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\n  size?: \"small\" | \"medium\" | \"large\" | undefined;\n  variant?: \"text\" | \"outlined\" | \"contained\" | undefined;\n  className?: string;\n  sx?: SxProps;\n  disabled?: boolean;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  endIcon?: React.ReactNode;\n}\n\nconst CommonButton = ({\n  text,\n  variant,\n  sx,\n  size,\n  className,\n  type,\n  disabled,\n  onClick,\n  endIcon,\n}: CommonButtonPropTypes) => {\n  return (\n    <Button\n      className={disabled ? \" text-white\" : className}\n      variant={variant}\n      sx={sx}\n      size={size}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n      endIcon={endIcon}\n    >\n      {text}\n    </Button>\n  );\n};\n\nexport default CommonButton;\n","/** @format */\n\nexport const featuredHash =\n  \"bafybeihssw3k2awihbgie5ej7k7k2pn62osmbvyuhzlode3hz746p4es6a/Latimar\";\nexport const featuredImgPHSrc =\n  \"https://images.unsplash.com/photo-1599658880436-c61792e70672?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\";\n\nexport const recommendedIdes = [8, 10, 7];\n","/** @format */\n\nimport {  useMemo } from \"react\";\n\n//Third Party\nimport { useMoralis } from \"react-moralis\";\nimport { contractAddresses, abi } from \"../constants\";\n\ninterface contractAddressesInterface {\n  [key: string]: string[];\n}\n\nconst useContract = () => {\n  //get contract and contract address\n  const { chainId: chainIdHex, Moralis, isWeb3Enabled } = useMoralis();\n  const createContractData = (chainIdHex: string | null) => {\n    if (!chainIdHex || !isWeb3Enabled) return null;\n    const ethers = Moralis.web3Library;\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    const addresses: contractAddressesInterface = contractAddresses;\n    const chainId: string = parseInt(chainIdHex!).toString();\n    const crowdFundAddress =\n      chainId in contractAddresses ? addresses[chainId][0] : undefined;\n    //@ts-ignore\n    const contract = new ethers.Contract(crowdFundAddress!, abi, provider);\n    return { contract, crowdFundAddress, abi };\n  };\n\n  return useMemo(\n    () => createContractData(chainIdHex),\n    [chainIdHex, isWeb3Enabled]\n  );\n};\n\nexport default useContract;\n","//Third Party\nimport { ConnectButton} from \"web3uikit\";\n\n\n\nconst ConnectPlease = () => {\n    return (\n      <div className=\"flex items-center font-bold\">\n        Please <ConnectButton  moralisAuth={false}  /> TO Use App Properly.\n      </div>\n    );\n  };\n\n  export default ConnectPlease"],"sourceRoot":""}